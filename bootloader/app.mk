################################################################################
# \file app.mk
# \version 4.0
#
# \brief
# Configuration file for adding/removing source files. Modify this file
# to suit the application needs.
#
################################################################################
# \copyright
# Copyright 2019-2024, Cypress Semiconductor Corporation (an Infineon company) or
# an affiliate of Cypress Semiconductor Corporation. All rights reserved.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

################################################################################
# Paths
################################################################################
# Define mcuboot core path
MCUBOOT_PATH = $(SEARCH_mcuboot)
# Define mcuboot cypress path
MCUBOOT_CY_PATH = $(MCUBOOT_PATH)/boot/cypress
# Define platform config path
PLATFORM_PATH = ../platforms/$(PLATFORM)
# Define build artifacts output path
BINARY_OUT_PATH = build/$(TARGET)/$(CONFIG)
# Define edgeprotecttools path
EDGE_PROTECT_TOOLS := edgeprotecttools
# Autogenerated files path
AUTOGENERATED_DIR = $(PLATFORM_PATH)/generated
################################################################################
# Create autogenerated folder
################################################################################
AUTOGENERATED_DIR_RES := $(shell mkdir -p $(AUTOGENERATED_DIR))
################################################################################
# Make includes
################################################################################
-include $(AUTOGENERATED_DIR)/memorymap.mk
-include $(AUTOGENERATED_DIR)/feature_config.mk
-include $(PLATFORM_PATH)/platform.mk
################################################################################
# Mbedtls paths
################################################################################
MBEDTLS_CONFIG_FILE="\"../platforms/$(PLATFORM)/mcuboot_config/ifx_mbedtls_crypto_config.h\""
MBEDTLS_USER_CONFIG_FILE="\"../platforms/$(PLATFORM)/mcuboot_config/ifx_mbedtls_target_config.h\""
MBEDTLS_PSA_CRYPTO_CONFIG_FILE ?="\"../platforms/$(PLATFORM)/mcuboot_config/ifx_psa_crypto_config.h\""

################################################################################
# Variables
################################################################################
# Switch on a bootstrap support in swap mode (0 - off, 1 - on)
USE_BOOTSTRAP ?= 1
USE_PSVP_NO_BOOTROM ?= 0
################################################################################
# Linker defs
################################################################################
FLASH_ORIGIN ?= $(BOOTLOADER_ORIGIN)
FLASH_SIZE ?= $(BOOTLOADER_SIZE)

ifeq ($(TOOLCHAIN), GCC_ARM)
    LINKER_SUFIX = ld
else ifeq ($(TOOLCHAIN), IAR)
    LINKER_SUFIX = icf
else ifeq ($(TOOLCHAIN), ARM)
    LINKER_SUFIX = sct
endif

ifeq ($(TOOLCHAIN), GCC_ARM)
    LDFLAGS += -Wl,--defsym=RAM_ORIGIN=$(BOOTLOADER_RAM_ORIGIN)
    LDFLAGS += -Wl,--defsym=RAM_SIZE=$(BOOTLOADER_RAM_SIZE)
    LDFLAGS += -Wl,--defsym=FLASH_ORIGIN=$(FLASH_ORIGIN)
    LDFLAGS += -Wl,--defsym=FLASH_SIZE=$(FLASH_SIZE)
    LDFLAGS += -Wl,--defsym=FLASH_OFS=$(FLASH_OFS)

else ifeq ($(TOOLCHAIN), IAR)
    LDFLAGS += --config_def RAM_ORIGIN=$(BOOTLOADER_RAM_ORIGIN)
    LDFLAGS += --config_def RAM_SIZE=$(BOOTLOADER_RAM_SIZE)
    LDFLAGS += --config_def FLASH_ORIGIN=$(FLASH_ORIGIN)
    LDFLAGS += --config_def FLASH_SIZE=$(FLASH_SIZE)
    LDFLAGS += --config_def FLASH_OFS=$(FLASH_OFS)

else ifeq ($(TOOLCHAIN), ARM)
    LDFLAGS += --predefine="-DRAM_ORIGIN=$(BOOTLOADER_RAM_ORIGIN)"
    LDFLAGS += --predefine="-DRAM_SIZE=$(BOOTLOADER_RAM_SIZE)"
    LDFLAGS += --predefine="-DFLASH_ORIGIN=$(FLASH_ORIGIN)"
    LDFLAGS += --predefine="-DFLASH_SIZE=$(FLASH_SIZE)"
    LDFLAGS += --predefine="-DFLASH_OFS=$(FLASH_OFS)"
else
    $(error $(TOOLCHAIN) not supported at this moment)
endif

ifeq ($(TOOLCHAIN), IAR)
    LDFLAGS += --redirect _Printf=_PrintfTiny
endif

# Define linker path
LINKER_SCRIPT = $(PLATFORM_PATH)/$(PLATFORM_LINKER_SCRIPT).$(LINKER_SUFIX)
################################################################################
# Prebuild section
################################################################################
PREBUILD = sleep 0

ifneq ($(PLATFORM_PREBUILD), )
    PREBUILD += && $(PLATFORM_PREBUILD)
endif

PREBUILD += && $(CY_PYTHON_PATH) $(MCUBOOT_CY_PATH)/scripts/memorymap_rework.py run -p ../platforms/$(PLATFORM)/memory_maps/platform.json -i $(MEMORY_MAP) -o $(AUTOGENERATED_DIR)/ -n memorymap > $(AUTOGENERATED_DIR)/memorymap.mk

ifneq ($(ECDSA_PUBLIC_KEY), )
    ECDSA_CONVERT_C_KEY_RES := $(shell $(EDGE_PROTECT_TOOLS) convert-key --fmt C_ARRAY -k $(ECDSA_PUBLIC_KEY) -o $(AUTOGENERATED_DIR)/sign_key.c --var-name ecdsa_pub_key)
    ECDSA_CONVERT_DER_KEY_RES := $(shell $(EDGE_PROTECT_TOOLS) convert-key --fmt DER -k $(ECDSA_PUBLIC_KEY) -o $(AUTOGENERATED_DIR)/sign_key.der)
    ECDSA_FILE_SIZE := $(shell wc -c < $(AUTOGENERATED_DIR)/sign_key.der | tr -d ' ')

    DEFINES += ECDSA_PUBLIC_KEY_LEN=$(ECDSA_FILE_SIZE)

endif

ifneq ($(ENC_PRIVATE_KEY), )
    ENC_CONVERT_KEY_RES := $(shell $(EDGE_PROTECT_TOOLS) convert-key --fmt C_ARRAY -k $(ENC_PRIVATE_KEY) -o $(AUTOGENERATED_DIR)/enc_key.c --var-name enc_priv_key)
    ENC_CONVERT_DER_KEY_RES := $(shell $(EDGE_PROTECT_TOOLS) convert-key --fmt DER-PKCS8 -k $(ENC_PRIVATE_KEY) -o $(AUTOGENERATED_DIR)/enc_key.der)
    ENC_FILE_SIZE := $(shell wc -c < $(AUTOGENERATED_DIR)/enc_key.der | tr -d ' ')

    DEFINES += ENC_PRIVATE_KEY_LEN=$(ENC_FILE_SIZE)
endif

ifneq ($(USE_SFLASH_KEYS), )
    REMOVE_C_KEYS := $(shell rm -f $(AUTOGENERATED_DIR)/enc_key.c $(AUTOGENERATED_DIR)/sign_key.c)

    KEY_ARGS := --image $(AUTOGENERATED_DIR)/sign_key.der

    ifneq ($(ENC_PRIVATE_KEY), )
        KEY_ARGS += --image $(AUTOGENERATED_DIR)/enc_key.der
    endif

    CREATE_EMPTY := $(shell touch $(AUTOGENERATED_DIR)/key_trailer.bin)
    
    KEY_ARGS += --image $(AUTOGENERATED_DIR)/key_trailer.bin

    COMBINE_KEYS := $(shell $(EDGE_PROTECT_TOOLS) merge-bin $(KEY_ARGS) --output $(AUTOGENERATED_DIR)/sflash_keys.bin)
    DEFINES += SFLASH_KEYS
endif

################################################################################
# Defines
################################################################################
DEFINES += RAM_ORIGIN=$(BOOTLOADER_RAM_ORIGIN)
DEFINES += RAM_SIZE=$(BOOTLOADER_RAM_SIZE)
DEFINES += $(PLATFORM_DEFINES)
DEFINES += $(PLATFORM)
DEFINES += $(FAMILY)
DEFINES += CY_RETARGET_IO_NO_FLOAT

DEFINES += MCUBOOT_LOG_LEVEL=$(MCUBOOT_LOG_LEVEL)
DEFINES += MCUBOOT_IMAGE_NUMBER=$(MCUBOOT_IMAGE_NUMBER)
DEFINES += MEMORY_ALIGN=$(PLATFORM_MEMORY_ALIGN)
DEFINES += PLATFORM_MAX_TRAILER_PAGE_SIZE=$(PLATFORM_MAX_TRAILER_PAGE_SIZE)
DEFINES += MCUBOOT_MAX_IMG_SECTORS=$(MAX_IMG_SECTORS)
DEFINES += MBEDTLS_CONFIG_FILE=$(MBEDTLS_CONFIG_FILE)

DEFINES += MBEDTLS_USER_CONFIG_FILE=$(MBEDTLS_USER_CONFIG_FILE)
DEFINES += MBEDTLS_PSA_CRYPTO_CONFIG_FILE=$(MBEDTLS_PSA_CRYPTO_CONFIG_FILE)

ifeq ($(USE_HW_KEY), 1)
    DEFINES += MCUBOOT_HW_KEY
endif

ifeq ($(USE_SHARED_SLOT), 1)
    DEFINES += USE_SHARED_SLOT=$(USE_SHARED_SLOT)
else
    DEFINES += USE_SHARED_SLOT=0 
endif

ifneq ($(MCUBOOT_SKIP_BOOT_VALIDATION), 1)
    DEFINES += MCUBOOT_VALIDATE_PRIMARY_SLOT
endif

ifeq ($(MCUBOOT_SKIP_UPGRADE_VALIDATION), 1)
    DEFINES += MCUBOOT_SKIP_VALIDATE_SECONDARY_SLOT
endif

ifeq ($(USE_CRYPTO_HW), 1)
    DEFINES += CY_CRYPTO_HAL_DISABLE
    DEFINES += CY_MBEDTLS_HW_ACCELERATION
endif

ifeq ($(USE_WDT), 1)
    DEFINES += USE_WDT
endif

ifeq ($(USE_OVERWRITE), 1)
    DEFINES += MCUBOOT_OVERWRITE_ONLY
    ifeq ($(USE_SW_DOWNGRADE_PREV), 1)
        DEFINES += MCUBOOT_DOWNGRADE_PREVENTION
    endif
else
    ifeq ($(USE_BOOTSTRAP), 1)
        DEFINES += MCUBOOT_BOOTSTRAP
    endif
    ifeq ($(USE_SW_DOWNGRADE_PREV), 1)
        $(error SW_DOWNGRADE_PREV doesn't work with SWAP)
    endif
endif

ifeq ($(USE_EXTERNAL_FLASH), 1)
    DEFINES += CY_BOOT_USE_EXTERNAL_FLASH
endif

ifeq ($(USE_XIP), 1)
    DEFINES += USE_XIP

    ifneq ($(USE_EXTERNAL_FLASH), 1)
        $(error USE_EXTERNAL_FLASH must be specified for XIP mode)
    endif
endif

ifneq ($(MCUBOOT_IMAGE_NUMBER), 1)
    ifeq ($(MCUBOOT_DEPENDENCY_CHECK), 1)
        DEFINES += MCUBOOT_DEPENDENCY_CHECK
    endif
endif

ifeq ($(USE_MEASURED_BOOT), 1)
    DEFINES += MCUBOOT_MEASURED_BOOT
    DEFINES += MCUBOOT_DATA_SHARING
    DEFINES += MAX_BOOT_RECORD_SZ=$(BOOT_SHARED_DATA_RECORD_SIZE)
    DEFINES += MCUBOOT_SHARED_DATA_BASE=$(BOOT_SHARED_DATA_ADDRESS)
    DEFINES += MCUBOOT_SHARED_DATA_SIZE=$(BOOT_SHARED_DATA_SIZE)
endif

ifeq ($(USE_MCUBOOT_MULTI_MEMORY_LOAD), 1)
    DEFINES += MCUBOOT_MULTI_MEMORY_LOAD
    DEFINES += MCUBOOT_RAM_LOAD
    DEFINES += MULTIPLE_EXECUTABLE_RAM_REGIONS
else ifeq ($(USE_MCUBOOT_RAM_LOAD), 1)
    DEFINES += MCUBOOT_RAM_LOAD=1
    DEFINES += IMAGE_EXECUTABLE_RAM_START=$(IMAGE_EXECUTABLE_RAM_START)
    DEFINES += IMAGE_EXECUTABLE_RAM_SIZE=$(IMAGE_EXECUTABLE_RAM_SIZE)
endif

ifeq ($(USE_STAGE_RAM_APPS), 1)
    DEFINES += STAGE_RAM_APPS=1
    DEFINES += RAM_APP_STAGING_EXT_MEM_ADDR=$(RAM_APP_STAGING_EXT_MEM_ADDR)
    DEFINES += RAM_APP_STAGING_SRAM_MEM_ADDR=$(RAM_APP_STAGING_SRAM_MEM_ADDR)
    DEFINES += RAM_APP_STAGING_SIZE=$(RAM_APP_STAGING_SIZE)

    ifeq ($(RAM_APP_RESET_TRIGGER), 1)
        DEFINES += RAM_APP_RESET_TRIGGER=1
    endif
endif

FIH_PROFILE_LEVEL_LIST = OFF LOW MEDIUM HIGH
ifneq ($(filter $(FIH_PROFILE_LEVEL), $(FIH_PROFILE_LEVEL_LIST)),)
    ifneq ($(FIH_PROFILE_LEVEL), OFF)
        DEFINES += MCUBOOT_FIH_PROFILE_ON
        DEFINES += MCUBOOT_FIH_PROFILE_$(FIH_PROFILE_LEVEL)
    endif
endif

ifeq ($(ENC_IMG), 1)
    DEFINES += ENC_IMG=1
    ifeq ($(USE_XIP), 1)
        #DEFINES += MCUBOOT_ENC_IMAGES_XIP
        $(error MCUBOOT_ENC_IMAGES_XIP is not implemented yet)
    endif
endif

ifeq ($(USE_HW_ROLLBACK_PROT), 1)
    DEFINES += MCUBOOT_HW_ROLLBACK_PROT
endif

################################################################################
# Sources
################################################################################
SOURCES += $(PLATFORM_SOURCES)
SOURCES += \
    $(MCUBOOT_PATH)/boot/bootutil/src/boot_record.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/bootutil_misc.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/bootutil_public.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/crc32c.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/encrypted.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/fault_injection_hardening.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/fault_injection_hardening_delay_rng_mbedtls.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/loader.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/swap_misc.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/swap_scratch.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/swap_status_misc.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/swap_status_part.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/swap_status.c\
    $(MCUBOOT_PATH)/boot/bootutil/src/tlv.c\
    $(MCUBOOT_CY_PATH)/platforms/memory/cy_flash_map.c\
    $(wildcard $(AUTOGENERATED_DIR)/*.c)\
    $(wildcard $(PLATFORM_PATH)/*.c)\
    $(wildcard $(MCUBOOT_CY_PATH)/platforms/memory/$(FAMILY)/*.c)
    
ifeq ($(USE_EXTERNAL_FLASH), 1)
    ifeq ($(USE_SERIAL_FLASH_LIBRARY),)
        SOURCES += $(wildcard $(MCUBOOT_CY_PATH)/platforms/memory/external_memory/external_memory.c)
    endif
    SOURCES += $(wildcard $(MCUBOOT_CY_PATH)/platforms/memory/$(FAMILY)/flash_qspi/*.c)
endif

SOURCES += $(MCUBOOT_PATH)/boot/bootutil/src/image_validate.c
SOURCES += $(wildcard $(MCUBOOT_CY_PATH)/platforms/crypto/$(FAMILY)/*.c)

ifeq ($(USE_HW_ROLLBACK_PROT), 1)
    SOURCES += $(wildcard $(MCUBOOT_CY_PATH)/platforms/security_counter/*.c)
endif

SOURCES += $(wildcard $(SEARCH_cy-mbedtls-acceleration)/COMPONENT_CAT1/mbedtls_psa_MXCryptolite/*.c)
SOURCES += $(wildcard $(SEARCH_ifx-mbedtls)/3rdparty/p256-m/*.c)
SOURCES += $(wildcard $(SEARCH_ifx-mbedtls)/3rdparty/p256-m/p256-m/*.c)

################################################################################
# Includes
################################################################################
INCLUDES += $(PLATFORM_INCLUDES)
INCLUDES += \
    $(MCUBOOT_PATH)/boot/bootutil/include\
    $(MCUBOOT_PATH)/boot/bootutil/include/bootutil\
    $(MCUBOOT_PATH)/bootutil/include/bootutil\
    $(MCUBOOT_PATH)/boot/bootutil/src\
    $(MCUBOOT_CY_PATH)/libs/watchdog\
    $(MCUBOOT_CY_PATH)/platforms/memory\
    $(MCUBOOT_CY_PATH)/platforms/memory/sysflash\
    $(MCUBOOT_CY_PATH)/platforms/memory/flash_map_backend\
    $(MCUBOOT_CY_PATH)/platforms/memory/$(FAMILY)\
    $(MCUBOOT_CY_PATH)/platforms/memory\
    $(PLATFORM_PATH)/mcuboot_config\
    $(PLATFORM_PATH)\
    $(AUTOGENERATED_DIR)

ifeq ($(USE_EXTERNAL_FLASH), 1)
    INCLUDES += $(MCUBOOT_CY_PATH)/platforms/memory/$(FAMILY)/flash_qspi
    INCLUDES += $(MCUBOOT_CY_PATH)/platforms/memory/external_memory
endif

INCLUDES += $(MCUBOOT_CY_PATH)/platforms/crypto/$(FAMILY)

ifeq ($(USE_HW_ROLLBACK_PROT), 1)
    INCLUDES += $(MCUBOOT_CY_PATH)/platforms/security_counter
endif

INCLUDES += $(SEARCH_cy-mbedtls-acceleration)/COMPONENT_CAT1/mbedtls_psa_MXCryptolite
################################################################################
# Flags
################################################################################
ifeq ($(TOOLCHAIN), GCC_ARM)
   CFLAGS += -Wall -Wextra
endif
CXXFLAGS += $(CFLAGS)
################################################################################
# Postbuild
################################################################################
POSTBUILD += $(PLATFORM_POSTBUILD)
POSTBUILD += $(CY_TOOLS_DIR)/gcc/bin/arm-none-eabi-readelf -Wa $(BINARY_OUT_PATH)/$(APPNAME).elf > $(BINARY_OUT_PATH)/$(APPNAME).readelf
################################################################################
# Add some files which will be deleted by the command 'make clean'
# You can also define a catalog to be deleted. It may be like:
#     CY_GENERATED_DIR += ./autogenerated_dir
# and it also will be removed
################################################################################
CY_GENERATED_DIR += $(AUTOGENERATED_DIR)

clean_proj_autogenerated:
	- rm ./memorymap.mk memorymap.c memorymap.h $(AUTOGENERATED_DIR)/feature_config.mk \
	rm -rf $(CY_GENERATED_DIR)

clean_proj: clean_proj_autogenerated