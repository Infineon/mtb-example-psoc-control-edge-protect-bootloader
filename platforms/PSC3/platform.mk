################################################################################
# \file platform.mk
# \version 1.1
#
# \brief
# Platform-dependent variables
#
################################################################################
# \copyright
# Copyright 2021-2024, Cypress Semiconductor Corporation (an Infineon company) or
# an affiliate of Cypress Semiconductor Corporation.  All rights reserved.
#
# This software, including source code, documentation and related
# materials ("Software") is owned by Cypress Semiconductor Corporation
# or one of its affiliates ("Cypress") and is protected by and subject to
# worldwide patent protection (United States and foreign),
# United States copyright laws and international treaty provisions.
# Therefore, you may use this Software only as provided in the license
# agreement accompanying the software package from which you
# obtained this Software ("EULA").
# If no EULA applies, Cypress hereby grants you a personal, non-exclusive,
# non-transferable license to copy, modify, and compile the Software
# source code solely for use in connection with Cypress's
# integrated circuit products.  Any reproduction, modification, translation,
# compilation, or representation of this Software except as specified
# above is prohibited without the express written permission of Cypress.
#
# Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress
# reserves the right to make changes to the Software without notice. Cypress
# does not assume any liability arising out of the application or use of the
# Software or any product or circuit described in the Software. Cypress does
# not authorize its products for use in any products where a malfunction or
# failure of the Cypress product may reasonably be expected to result in
# significant property damage, injury or death ("High Risk Product"). By
# including Cypress's product in a High Risk Product, the manufacturer
# of such system or application assumes all risk of such use and in doing
# so agrees to indemnify Cypress against all liability.
################################################################################

CORE_SUFFIX = m33

#redefine DEVICE_MODE from bsp.mk
#DEVICE_MODE=SECURE

# Set to 1 to enable SE Runtime Services implementation of crypto,
# otherwise PSA mbedtls implementation used
USE_IFX_SE_RT ?= 0

PLATFORM_DEFINES += CM33_STACK_LIMIT=0x200
PLATFORM_INCLUDES = 
PLATFORM_SOURCES = 

PLATFORM_CHUNK_SIZE = 4096U
PLATFORM_MEMORY_ALIGN = 512U
PLATFORM_MAX_TRAILER_PAGE_SIZE = 512U

PLATFORM_ALIGNMENT = 1
PLATFORM_ERASE_VALUE = 0
PLATFORM_MIN_ERASE_SIZE = 0x200
###############################################################################
# Application dependent definitions
# MCUBootApp
###############################################################################

ifeq ($(APPNAME), bootloader)
    FLASH_OFS = 0

    ifeq ($(BOOT_MODE), signed)
        FLASH_OFS := $(BOOT_HEADER_SIZE)

        PLATFORM_DEFINES += MCUBOOT_ENCRYPT_PREBUILT_KEY=1
        PLATFORM_DEFINES += MCUBOOT_ENCRYPT_PREBUILT_KEY_LEN=138
        PLATFORM_DEFINES += MCUBOOT_ENCRYPT_PREBUILT_KEY_ADDR=0x03407644

        SIGN_ARGS = sign-image \
            -H $(BOOT_HEADER_SIZE) \
            --align $(PLATFORM_ALIGNMENT) \
            --image-version '1.0.0' \
            -S $(BOOTLOADER_SIZE) \
            -R $(PLATFORM_ERASE_VALUE) \
            --public-key-format full \
            --pubkey-encoding raw \
            --signature-encoding raw \
            --key $(OEM_KEY_FILE) \
            --min-erase-size $(PLATFORM_MIN_ERASE_SIZE) \
            --hex-addr $(BOOTLOADER_ORIGIN) \
            --overwrite-only

        PLATFORM_POSTBUILD += mv -f $(BINARY_OUT_PATH)/$(APPNAME).hex $(BINARY_OUT_PATH)/$(APPNAME)_raw.hex;\
            $(CY_ELF_TO_HEX_TOOL) $(CY_ELF_TO_HEX_OPTIONS) $(BINARY_OUT_PATH)/$(APPNAME)_raw.hex $(BINARY_OUT_PATH)/$(APPNAME)_unsigned.hex;\
            $(EDGE_PROTECT_TOOLS) $(SIGN_ARGS) -i ./$(BINARY_OUT_PATH)/$(APPNAME)_unsigned.hex -o ./$(BINARY_OUT_PATH)/$(APPNAME).hex;
    endif

    PLATFORM_LINKER_SCRIPT = linker/TOOLCHAIN_$(TOOLCHAIN)/linker

    FEATURE_CONFIG ?= $(PLATFORM_PATH)/feature_config.json
    PLATFORM_PREBUILD += $(CY_PYTHON_PATH) $(MCUBOOT_CY_PATH)/scripts/feature.py run -f $(FEATURE_CONFIG) -p $(MCUBOOT_CY_PATH)/platforms/memory/$(FAMILY)/flashmap/platform_properties.json -n $(AUTOGENERATED_DIR)/feature_config.mk

    # Hardware rollback counter support
    ifeq ($(USE_HW_ROLLBACK_PROT), 1)
        PLATFORM_SOURCES += $(wildcard $(MCUBOOT_CY_PATH)/platforms/security_counter/PSC3/*.c)
        PLATFORM_INCLUDES += $(MCUBOOT_CY_PATH)/platforms/security_counter/PSC3
        PLATFORM_DEFINES += CY_RBC_ROLLBACK_COUNTERS_NUM=$(MCUBOOT_IMAGE_NUMBER)
        PLATFORM_DEFINES += CY_RBC_CHECKSUM_LENGTH=32
        PLATFORM_DEFINES += CY_RBC_ALIGN=$(PLATFORM_MEMORY_ALIGN)
    endif

    ifeq ($(USE_PROT_CONTEXT_SWITCH), 1)
        PLATFORM_DEFINES += USE_PROT_CONTEXT_SWITCH
    endif

endif
